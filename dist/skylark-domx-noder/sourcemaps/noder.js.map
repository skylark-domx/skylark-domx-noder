{"version":3,"sources":["noder.js"],"names":["define","skylark","langx","browser","isIE","navigator","userAgent","match","fragmentRE","singleTagRE","div","document","createElement","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","map","Array","prototype","slice","ensureNodes","nodes","copyByClone","isArrayLike","call","node","cloneNode","flatten","nodeName","elm","chkName","name","toLowerCase","undefined","enhancePlaceContent","placing","isFunction","apply","neddsFlattern","i","length","append","parentNode","appendChild","this","tag","props","parent","test","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","nodeType","ownerDocument","noder","mixin","active","doc","el","activeElement","error","body","blur","clone","deep","self","each","getAttribs","attr","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","html","trim","RegExp","$1","container","innerHTML","xml","split","newXml","edsplit","removeSelfClosingTags","dom","forEach","removeChild","child","createTextNode","text","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","requestFullScreen","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","href","$","is","disabled","closest","visible","isString","replace","isNumber","isDocument","DOCUMENT_NODE","isInDocument","isWindow","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","after","refNode","nextSibling","insertBefore","before","prepend","reflow","offsetHeight","remove","e","console","warn","children","oldNode","replaceChild","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","attach"],"mappings":"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","file":"../noder.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});"]}