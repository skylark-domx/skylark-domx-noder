{"version":3,"sources":["noder.js"],"names":["define","skylark","langx","browser","isIE","navigator","userAgent","match","fragmentRE","singleTagRE","div","document","createElement","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","map","Array","prototype","slice","ensureNodes","nodes","copyByClone","isArrayLike","call","node","cloneNode","flatten","nodeName","elm","chkName","name","toLowerCase","undefined","enhancePlaceContent","placing","isFunction","apply","neddsFlattern","i","length","append","parentNode","appendChild","this","tag","props","attrs","parent","test","createElementNS","isHtmlNode","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","nodeType","ownerDocument","isEditable","el","contentEditable","noder","mixin","active","doc","activeElement","error","body","after","refNode","nextSibling","insertBefore","before","blur","clone","deep","self","each","getAttribs","attr","setAttrib","getAttrib","child","contents","contentDocument","childNodes","createFragment","html","trim","RegExp","$1","container","innerHTML","xml","split","newXml","edsplit","removeSelfClosingTags","dom","forEach","removeChild","createTextNode","text","empty","hasChildNodes","firstChild","generateId","str","tagName","className","src","href","textContent","sum","charCodeAt","toString","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","requestFullScreen","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","fromPoint","x","y","elementFromPoint","isString","replace","isNumber","isActive","elem","type","isDocument","DOCUMENT_NODE","isElement","isInDocument","isInFrame","window","isInput","isTextNode","isWindow","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","prepend","reflow","offsetHeight","remove","e","console","warn","children","oldNode","replaceChild","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","attach"],"mappings":"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","file":"../noder.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {attrs} attrs\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props,attrs, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (langx.isHtmlNode(props)) {\r\n            parent = props;\r\n            props = null;\r\n            attrs = null;\r\n        } else if (langx.isHtmlNode(attrs)){\r\n            parent = attrs;\r\n            attrs = null;\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node[name] = props[name];\r\n            }\r\n        }\r\n\r\n        if (attrs) {\r\n            for (var name in attrs) {\r\n                node.setAttribute(name, attrs[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n    function fromPoint(x,y) {\r\n        return document.elementFromPoint(x,y);\r\n    }\r\n\r\n    /**\r\n     * Generate id\r\n     * @param   {HTMLElement} el\r\n     * @returns {String}\r\n     * @private\r\n     */\r\n    function generateId(el) {\r\n        var str = el.tagName + el.className + el.src + el.href + el.textContent,\r\n            i = str.length,\r\n            sum = 0;\r\n\r\n        while (i--) {\r\n            sum += str.charCodeAt(i);\r\n        }\r\n\r\n        return sum.toString(36);\r\n    }\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n\r\n    function isTextNode(node) {\r\n        return node && node.nodeType === 3;\r\n    }\r\n\r\n\r\n    function isElement(node) {\r\n        return node && node.nodeType === 1;\r\n    }\r\n\r\n    function isInFrame() {\r\n        try {\r\n            return window.parent !== window.self;\r\n        } catch (x) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function isInput (el) { \r\n        return el.tagName === 'INPUT' || \r\n               el.tagName === 'TEXTAREA' || \r\n               el.tagName === 'SELECT' || \r\n               isEditable(el); \r\n    }\r\n    \r\n    function isEditable (el) {\r\n      if (!el) { return false; } // no parents were editable\r\n      if (el.contentEditable === 'false') { return false; } // stop the lookup\r\n      if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\r\n      return isEditable(el.parentNode); // contentEditable is set to 'inherit'\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        after: after,\r\n\r\n        append: append,\r\n\r\n        before: before,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        contains: contains,\r\n\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        generateId,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        fromPoint,\r\n\r\n        html: html,\r\n\r\n        isActive,\r\n\r\n        isChildOf,\r\n\r\n        isDocument,\r\n\r\n        isEditable,\r\n        \r\n        isElement,\r\n\r\n        isInDocument,\r\n\r\n        isInFrame,\r\n\r\n        isInput,\r\n\r\n        isTextNode,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        prepend: prepend,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        selectable,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});"]}