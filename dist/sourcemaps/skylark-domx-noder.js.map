{"version":3,"sources":["skylark-domx-noder.js"],"names":["define","skylark","types","arrays","strings","scripter","browser","Array","prototype","map","slice","noder","Object","assign","blur","el","generateId","str","tagName","className","src","href","textContent","i","length","sum","charCodeAt","toString","attach","active","doc","document","activeElement","error","body","nodeName","placing","node","isFunction","apply","isArrayLike","neddsFlattern","flatten","isElement","nodeType","isTextNode","isFragment","content","call","value","test","createTextNode","filter","normalizeContent","copyByClone","nodes","cloneNode","enhancePlaceContent","ensureNodes","after","parent","refNode","parentNode","nextSibling","insertBefore","appendChild","this","append","before","clone","deep","isChildOf","directly","documentElement","contains","child","elm","chkName","name","toLowerCase","undefined","contents","contentDocument","childNodes","createElement","tag","props","attrs","createElementNS","isHtmlNode","setAttribute","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","createFragment","html","trim","RegExp","$1","container","innerHTML","xml","split","newXml","edsplit","removeSelfClosingTags","dom","forEach","removeChild","text","empty","hasChildNodes","firstChild","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","fromPoint","x","y","elementFromPoint","fullscreen","exitFullscreen","support","requestFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","rxhtmlTag","rscriptType","result","isString","replace","isNumber","_html","scripts","querySelectorAll","node1","type","evaluate","isActive","elem","blockNodes","isBlockNode","join","isDoc","DOCUMENT_NODE","isEditable","contentEditable","isFullscreen","isInDocument","isInFrame","window","self","isInput","isWindow","rootNodeRE","offsetParent","defaultView","getComputedStyle","position","styler","overlay","params","overlayDiv","css","top","left","width","height","zIndex","opacity","ownerDoc","ownerDocument","ownerWindow","parentWindow","pictureInPicture","exitPictureInPicture","pictureInPictureElement","requestPictureInPicture","prepend","reflow","offsetHeight","children","remove","e","console","warn","oldNode","replaceChild","reverse","root","scrollingElement","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","langx","throb","timer","time","callback","throbber","clearTimeout","setTimeout","update","textNode","nodeValue","traverse","fn","len","unwrap","wrapperInner","wrapperNode","wrapper","main"],"mappings":"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","file":"../skylark-domx-noder.js","sourcesContent":["define('skylark-domx-noder/noder',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-arrays\",\r\n    \"skylark-langx-strings\",\r\n    \"skylark-langx-scripter\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, types, arrays, strings,scripter,browser) {\r\n    var  \r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    /**\r\n     * Generate id\r\n     * @param   {HTMLElement} el\r\n     * @returns {String}\r\n     * @private\r\n     */\r\n    function generateId(el) {\r\n        var str = el.tagName + el.className + el.src + el.href + el.textContent,\r\n            i = str.length,\r\n            sum = 0;\r\n\r\n        while (i--) {\r\n            sum += str.charCodeAt(i);\r\n        }\r\n\r\n        return sum.toString(36);\r\n    }\r\n\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    Object.assign(noder, {\r\n\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n\r\n        generateId\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/active',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\treturn noder.active = activeElement;\r\n});\ndefine('skylark-domx-noder/_enhance_place_content',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-arrays\",\r\n\t\"./noder\"\r\n],function(types,arrays,noder){\r\n    function enhancePlaceContent(placing,node) {\r\n        if (types.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (types.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (types.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (types.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = arrays.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n\r\n\treturn enhancePlaceContent;\r\n});\ndefine('skylark-domx-noder/is-element',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function isElement(node) {\r\n        return node && node.nodeType === 1;\r\n    }\r\n\r\n\t\r\n\treturn noder.isElement = isElement;\r\n});\ndefine('skylark-domx-noder/is-text-node',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function isTextNode(node) {\r\n        return node && node.nodeType === 3;\r\n    }\r\n\r\n\t\r\n\treturn noder.isTextNode = isTextNode;\r\n});\ndefine('skylark-domx-noder/is-fragment',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function isFragment(node) {\r\n        return node && node.nodeType === 11;\r\n    }\r\n\r\n\treturn noder.isFragment = isFragment;\r\n});\ndefine('skylark-domx-noder/_normalize_content',[\r\n    \"skylark-langx-types\",\r\n\t\"./noder\",\r\n    \"./is-element\",\r\n    \"./is-text-node\",\r\n    \"./is-fragment\"\r\n],function(types,noder,isElement,isTextNode,isFragment){\r\n    var  \r\n        map = Array.prototype.map;\r\n        \r\n    function normalizeContent(content) {\r\n        if (typeof content === 'function') {\r\n            content = content();\r\n        }\r\n        return map.call(types.isArrayLike(content) ? content : [content],value => {\r\n            if (typeof value === 'function') {\r\n                value = value();\r\n            }\r\n            if (isElement(value) || isTextNode(value) || isFragment(value)) {\r\n                return value;\r\n            }\r\n            if (typeof value === 'string' && /\\S/.test(value)) {\r\n                return document.createTextNode(value);\r\n            }\r\n        }).filter(value => value);\r\n    }\r\n\r\n\treturn normalizeContent;\r\n});\ndefine('skylark-domx-noder/_ensure_nodes',[\r\n    \"skylark-langx-arrays\",\r\n\t\"./noder\",\r\n    \"./_normalize_content\"\r\n],function(arrays,noder,normalizeContent){\r\n    var  \r\n        map = Array.prototype.map;\r\n\r\n    function ensureNodes(content, copyByClone) {\r\n        var nodes = normalizeContent(content);\r\n\r\n\r\n        //if (!types.isArrayLike(nodes)) {\r\n        //    nodes = [nodes];\r\n        //}\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return arrays.flatten(nodes);\r\n    }\r\n\r\n\treturn ensureNodes;\r\n});\ndefine('skylark-domx-noder/after',[\r\n\t\"./noder\",\r\n    \"./_enhance_place_content\",\r\n    \"./_ensure_nodes\"\r\n],function(noder,enhancePlaceContent,ensureNodes){\r\n \r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.after = after;\r\n});\ndefine('skylark-domx-noder/append',[\r\n    \"./noder\",\r\n    \"./_enhance_place_content\",\r\n    \"./_ensure_nodes\"\r\n],function(noder,enhancePlaceContent,ensureNodes){\r\n \r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n    \r\n    return noder.append = append;\r\n});\ndefine('skylark-domx-noder/before',[\r\n    \"./noder\",\r\n    \"./_enhance_place_content\",\r\n    \"./_ensure_nodes\"\r\n],function(noder,enhancePlaceContent,ensureNodes){\r\n \r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.before = before;\r\n});\ndefine('skylark-domx-noder/body',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\tfunction body() {\r\n\t\treturn  document.body;\r\n\t}\r\n\t\r\n\treturn noder.body = body;\r\n});\ndefine('skylark-domx-noder/clone',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        return node.cloneNode(deep);\r\n    }\r\n\r\n\t\r\n\treturn noder.clone = clone;\r\n});\ndefine('skylark-domx-noder/is-child-of',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\t\r\n\treturn noder.isChildOf = isChildOf;\r\n});\ndefine('skylark-domx-noder/contains',[\r\n\t\"./noder\",\r\n    \"./is-child-of\"\r\n],function(noder,isChildOf){\r\n \r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\t\r\n\treturn noder.contains = contains;\r\n});\ndefine('skylark-domx-noder/node-name',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\t\r\n\treturn noder.nodeName = nodeName;\r\n});\ndefine('skylark-domx-noder/contents',[\r\n\t\"./noder\",\r\n    \"./node-name\"\r\n],function(noder,nodeName){\r\n \r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\t\r\n\treturn noder.contents = contents;\r\n});\ndefine('skylark-domx-noder/create-element',[\r\n    \"skylark-langx-types\",\r\n\t\"./noder\"\r\n],function(types,noder){\r\n \r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {attrs} attrs\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props,attrs, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (types.isHtmlNode(props)) {\r\n            parent = props;\r\n            props = null;\r\n            attrs = null;\r\n        } else if (types.isHtmlNode(attrs)){\r\n            parent = attrs;\r\n            attrs = null;\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node[name] = props[name];\r\n            }\r\n        }\r\n\r\n        if (attrs) {\r\n            for (var name in attrs) {\r\n                node.setAttribute(name, attrs[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            noder.append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n\t\r\n\treturn noder.createElement = createElement;\r\n});\ndefine('skylark-domx-noder/create-fragment',[\r\n    \"skylark-langx-strings\",\r\n\t\"./noder\",\r\n    \"./create-element\"\r\n],function(strings,noder,createElement){\r\n    var fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    function removeSelfClosingTags(xml) {\r\n        var split = xml.split(\"/>\");\r\n        var newXml = \"\";\r\n        for (var i = 0; i < split.length - 1;i++) {\r\n            var edsplit = split[i].split(\"<\");\r\n            newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n        }\r\n        return newXml + split[split.length-1];\r\n    }\r\n\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = strings.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n\t\r\n\treturn noder.createFragment = createFragment;\r\n});\ndefine('skylark-domx-noder/create-text-node',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n\r\n\treturn noder.createTextNode = createTextNode;\r\n});\ndefine('skylark-domx-noder/doc',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n\treturn noder.doc = doc;\r\n});\ndefine('skylark-domx-noder/empty',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\t\r\n\treturn noder.empty = empty;\r\n});\ndefine('skylark-domx-noder/focusable',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\t\r\n\treturn noder.focusable = focusable;\r\n});\ndefine('skylark-domx-noder/from-point',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\r\n    function fromPoint(x,y) {\r\n        return document.elementFromPoint(x,y);\r\n    }\r\n\r\n\t\r\n\treturn noder.fromPoint = fromPoint;\r\n});\ndefine('skylark-domx-noder/fullscreen',[\r\n    \"skylark-domx-browser\",\r\n\t\"./noder\"\r\n],function(browser,noder){\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullscreen(el) {\r\n        if (el === false) {\r\n            return browser.exitFullscreen.apply(document);\r\n        } else if (el) {\r\n            return el[browser.support.fullscreen.requestFullscreen]();\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\t\r\n\treturn noder.fullscreen = fullscreen;\r\n});\ndefine('skylark-domx-noder/html',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-scripter\",\r\n\t\"./noder\",\r\n    \"./empty\"\r\n],function(types,scripter,noder,empty){\r\n \r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\r\n       rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\r\n\r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function _html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            empty(node);\r\n            html = html || \"\";\r\n            if (types.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (types.isString(html) || types.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (types.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    function html(node,value) {\r\n        var result = _html(node,value);\r\n\r\n        if (value !== undefined) {\r\n            var scripts = node.querySelectorAll('script');\r\n\r\n            for (var i =0; i<scripts.length; i++) {\r\n                var node1 = scripts[i];\r\n                if (rscriptType.test( node1.type || \"\" ) ) {\r\n                  scripter.evaluate(node1.textContent,node1);\r\n                }\r\n            }       \r\n            return this;         \r\n        } else {\r\n            return result;\r\n        }\r\n    }\r\n\r\n\r\n\treturn noder.html = html;\r\n});\ndefine('skylark-domx-noder/is-active',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n\t\r\n\treturn noder.isActive = isActive;\r\n});\ndefine('skylark-domx-noder/is-block-node',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n\t\r\n\treturn noder.isBlockNode = isBlockNode;\r\n});\ndefine('skylark-domx-noder/is-doc',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n\t\r\n\treturn noder.isDoc = isDocument;\r\n});\ndefine('skylark-domx-noder/is-editable',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function isEditable (el) {\r\n      if (!el) { return false; } // no parents were editable\r\n      if (el.contentEditable === 'false') { return false; } // stop the lookup\r\n      if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\r\n      return isEditable(el.parentNode); // contentEditable is set to 'inherit'\r\n    }\r\n\r\n\t\r\n\treturn noder.isEditable = isEditable;\r\n});\ndefine('skylark-domx-noder/is-fullscreen',[\r\n\t\"./noder\",\r\n    \"./fullscreen\"\r\n],function(noder,fullscreen){\r\n \r\n    function isFullscreen(el) {\r\n        return fullscreen() === el;\r\n    }\r\n\t\r\n\treturn noder.isFullscreen = isFullscreen;\r\n});\ndefine('skylark-domx-noder/is-in-document',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }     \r\n\r\n\t\r\n\treturn noder.isInDocument = isInDocument;\r\n});\ndefine('skylark-domx-noder/is-in-frame',[\r\n\t\"./noder\"\r\n],function(noder){\r\n     function isInFrame() {\r\n        try {\r\n            return window.parent !== window.self;\r\n        } catch (x) {\r\n            return true;\r\n        }\r\n    }\r\n\t\r\n\treturn noder.isInFrame = isInFrame;\r\n});\ndefine('skylark-domx-noder/is-input',[\r\n\t\"./noder\",\r\n    \"./is-editable\"\r\n],function(noder,isEditable){\r\n \r\n    function isInput (el) { \r\n        return el.tagName === 'INPUT' || \r\n               el.tagName === 'TEXTAREA' || \r\n               el.tagName === 'SELECT' || \r\n               isEditable(el); \r\n    }\r\n\t\r\n\treturn noder.isInput = isInput;\r\n});\ndefine('skylark-domx-noder/is-window',[\r\n    \"skylark-langx-types\",\r\n    \"./noder\"\r\n],function(types,noder){\r\n   \r\n    return noder.isWindow = types.isWindow;\r\n\t\r\n});\ndefine('skylark-domx-noder/offset-parent',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    var  rootNodeRE = /^(?:body|html)$/i;\r\n    \r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\t\r\n\treturn noder.offsetParent = offsetParent;\r\n});\ndefine('skylark-domx-noder/overlay',[\r\n\t\"skylark-domx-styler\",\r\n\t\"./noder\"\r\n],function(styler,noder){\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    return noder.overlay = overlay;\r\n });\ndefine('skylark-domx-noder/owner-doc',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n\t\r\n\treturn noder.ownerDoc = ownerDoc;\r\n});\ndefine('skylark-domx-noder/owner-window',[\r\n\t\"./noder\",\r\n    \"./owner-doc\"\r\n],function(noder,ownerDoc){\r\n \r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n\treturn noder.ownerWindow = ownerWindow;\r\n});\ndefine('skylark-domx-noder/picture-in-picture',[\r\n    \"skylark-domx-browser\",\r\n\t\"./noder\"\r\n],function(browser,noder){\r\n\r\n    var fulledEl = null;\r\n\r\n    function pictureInPicture(el) {\r\n        if (el === false) {\r\n            return   document.exitPictureInPicture();\r\n        } else if (el) {\r\n            if (el !== document.pictureInPictureElement) {\r\n                el.requestPictureInPicture();\r\n                fulledEl = el;\r\n            }          \r\n        } else {\r\n            return document.pictureInPictureElement;\r\n        }\r\n    }\r\n\t\r\n\treturn noder.pictureInPicture = pictureInPicture;\r\n});\ndefine('skylark-domx-noder/prepend',[\r\n    \"./noder\",\r\n    \"./_enhance_place_content\",\r\n    \"./_ensure_nodes\"\r\n],function(noder,enhancePlaceContent,ensureNodes){\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.prepend = prepend;\r\n});\ndefine('skylark-domx-noder/reflow',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function reflow(elm) {\r\n        if (!elm) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\t\r\n\treturn noder.reflow = reflow;\r\n});\ndefine('skylark-domx-noder/remove-child',[\r\n    \"skylark-langx-types\",\r\n\t\"./noder\"\r\n],function(types,noder){\r\n \r\n\r\n    function removeChild(node,children) {\r\n        if (!types.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.removeChild = removeChild;\r\n});\ndefine('skylark-domx-noder/remove',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\t\r\n\treturn noder.remove = remove;\r\n});\ndefine('skylark-domx-noder/replace',[\r\n\t\"./noder\"\r\n],function(noder){\r\n     /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\treturn noder.replace = replace;\r\n});\ndefine('skylark-domx-noder/reverse',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\t\r\n\treturn noder.reverse = reverse;\r\n});\ndefine('skylark-domx-noder/root',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\tfunction root() {\r\n\t\treturn  document.documentElement;\r\n\t}\r\n\t\r\n\treturn noder.root = root;\r\n});\ndefine('skylark-domx-noder/scrolling-element',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\tfunction scrollingElement() {\r\n\t\treturn document.scrollingElement || document.documentElement;\r\n\t}\r\n\t\r\n\treturn noder.scrollingElement = scrollingElement;\r\n});\ndefine('skylark-domx-noder/selectable',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n\t\r\n\treturn noder.selectable = selectable;\r\n});\ndefine('skylark-domx-noder/throb',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-styler\",\r\n    \"./noder\"\r\n],function(langx,styler,noder) {\r\n\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"className\": params.className || \"throbber\"\r\n            }),\r\n            //_overlay = overlay(throbber, {\r\n            //    \"class\": 'overlay fade'\r\n            //}),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n\r\n        //throb = noder.createElement(\"div\", {\r\n        //   \"class\": params.throb && params.throb.className || \"throb\"\r\n        //}),\r\n        //textNode = noder.createTextNode(text || \"\"),\r\n \r\n        var content = params.content ||  '<span class=\"throb\"></span>';\r\n\r\n        //throb.appendChild(textNode);\r\n        //throbber.appendChild(throb);\r\n\r\n        noder.html(throbber,content);\r\n        \r\n        elm.appendChild(throbber);\r\n\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            throbber : throbber,\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    return noder.throb = throb;\r\n});\ndefine('skylark-domx-noder/traverse',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\t\r\n\treturn noder.traverse = traverse;\r\n});\ndefine('skylark-domx-noder/unwrap',[\r\n\t\"./noder\",\r\n    \"./is-doc\"\r\n],function(noder,isDoc){\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n\treturn noder.unwrap = unwrap;\r\n});\ndefine('skylark-domx-noder/wrapper-inner',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    var  slice = Array.prototype.slice;\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.wrapperInner = wrapperInner;\r\n});\ndefine('skylark-domx-noder/wrapper',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (types.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\t\r\n\treturn noder.wrapper = wrapper;\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\",\r\n\t\"./active\",\r\n\t\"./after\",\r\n\t\"./append\",\r\n\t\"./before\",\r\n\t\"./body\",\r\n\t\"./clone\",\r\n\t\"./contains\",\r\n\t\"./contents\",\r\n\t\"./create-element\",\r\n\t\"./create-fragment\",\r\n\t\"./create-text-node\",\r\n\t\"./doc\",\r\n\t\"./empty\",\r\n\t\"./focusable\",\r\n\t\"./from-point\",\r\n\t\"./fullscreen\",\r\n\t\"./html\",\r\n\t\"./is-active\",\r\n\t\"./is-block-node\",\r\n\t\"./is-child-of\",\r\n\t\"./is-doc\",\r\n\t\"./is-editable\",\r\n\t\"./is-element\",\r\n\t\"./is-fragment\",\r\n\t\"./is-fullscreen\",\r\n\t\"./is-in-document\",\r\n\t\"./is-in-frame\",\r\n\t\"./is-input\",\r\n\t\"./is-text-node\",\r\n\t\"./is-window\",\r\n\t\"./node-name\",\r\n\t\"./offset-parent\",\r\n\t\"./overlay\",\r\n\t\"./owner-doc\",\r\n\t\"./owner-window\",\r\n\t\"./picture-in-picture\",\r\n\t\"./prepend\",\r\n\t\"./reflow\",\r\n\t\"./remove-child\",\r\n\t\"./remove\",\r\n\t\"./replace\",\r\n\t\"./reverse\",\r\n\t\"./root\",\r\n\t\"./scrolling-element\",\r\n\t\"./selectable\",\r\n\t\"./throb\",\r\n\t\"./traverse\",\r\n\t\"./unwrap\",\r\n\t\"./wrapper-inner\",\r\n\t\"./wrapper\",\r\n\t\"./throb\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\n"]}